configfile:
    "config_pa.json"

#this snakefile is for taking the output from panX and generating files that indicate which genes are associated with which nodes

rule convert_to_pd:
    input:
        config['panX_directory']"/geneCluster"
    output:
        "fake_gene_SNP.fasta"
        "snp_coordinates.txt"
    shell:
        "python prep_genotype.py {input}"

#Now we need to figure out how many chunks

num_chunks = os.system("ls " + config['output_direc']"/temp2_gc_pd" + "| grep temp_pd | wc -l")

#this next one takes a long time so must be done in parallel

rule run_fill_fasta:
    input:
        config['output_direc']"/temp2_gc_pd"
    params:
        num_chunks
    shell:
        "qsub -t 1-'{params.num_chunks}' run_array_build_fasta.sh {input}"

rule prep_vcf_files:
    input:
        config['output_direc']
    output:
        "genotypefile.txt"
    shell:
        "qsub -hold_jid 'run_array' run_prep_for_gemma_atomm.sh {input}"

rule build_kinship_gemma:
    input:

    output:

    shell:
    gemma -g ../example/mouse_hs1940.geno.txt.gz -p ../example/mouse_hs1940.pheno.txt -gk -o mouse_hs1940 -debug

